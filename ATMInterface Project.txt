import java.util.Scanner;

class BankAccount {
    String firstName;
    String middleName;
    String lastName;
    String userName;
    String password;
    String accountNo;
    float balance = 100000f;
    int transactions = 0;
    String transactionHistory = "";

    public void register() {
        Scanner sc = new Scanner(System.in);

        // Ensure first name starts with a capital letter
        while (true) {
            System.out.print("\nEnter Your First Name - ");
            this.firstName = sc.nextLine();
            if (isCapitalized(this.firstName)) {
                break;
            } else {
                System.out.println("First name must start with a capital letter.");
            }
        }

        System.out.print("\nEnter Your Middle Name (optional) - ");
        String middleNameInput = sc.nextLine();
        if (!middleNameInput.isEmpty()) {
            // Ensure middle name starts with a capital letter
            while (true) {
                this.middleName = middleNameInput;
                if (isCapitalized(this.middleName)) {
                    break;
                } else {
                    System.out.println("Middle name must start with a capital letter.");
                }
            }
        }

        // Ensure last name starts with a capital letter
        while (true) {
            System.out.print("\nEnter Your Last Name - ");
            this.lastName = sc.nextLine();
            if (isCapitalized(this.lastName)) {
                break;
            } else {
                System.out.println("Last name must start with a capital letter.");
            }
        }

        System.out.print("\nEnter Your Username - ");
        this.userName = sc.nextLine();

        while (true) {
            System.out.print("\nEnter Your Password (4-6 digits only) - ");
            String inputPassword = sc.nextLine();

            if (isNumeric(inputPassword) && inputPassword.length() >= 4 && inputPassword.length() <= 6) {
                this.password = inputPassword;
                break;
            } else {
                System.out.println("Password must be 4 to 6 digits long and contain only digits.");
            }
        }

        while (true) {
            System.out.print("\nEnter Your Account Number (15 characters) - ");
            String inputAccountNo = sc.nextLine();

            if (inputAccountNo.length() == 15) {
                this.accountNo = inputAccountNo;
                break;
            } else {
                System.out.println("Account number must be exactly 15 characters long.");
            }
        }

        System.out.println("\nRegistration completed...kindly login.");
    }

    public boolean login() {
        boolean isLogin = false;
        Scanner sc = new Scanner(System.in);

        while (!isLogin) {
            System.out.print("\nEnter Your Username - ");
            String enteredUsername = sc.nextLine();

            if (enteredUsername.equals(userName)) {
                while (!isLogin) {
                    System.out.print("\nEnter Your Password - ");
                    String enteredPassword = sc.nextLine();

                    if (enteredPassword.equals(password)) {
                        System.out.print("\nLogin successful!!");
                        isLogin = true;
                    } else {
                        System.out.println("\nIncorrect Password");
                    }
                }
            } else {
                System.out.println("\nUsername not found");
            }
        }
        return isLogin;
    }

    public void withdraw() {
        Scanner sc = new Scanner(System.in);
        System.out.print("\nEnter the amount to withdraw: ");
        float amount = sc.nextFloat();

        if (amount > 0 && balance >= amount) {
            balance -= amount;
            transactions++;
            String transaction = "Withdraw: " + amount + " Rs\n";
            transactionHistory += transaction;
            System.out.println("Withdraw successful.");
        } else {
            System.out.println("Invalid amount or insufficient balance.");
        }
    }

    public void deposit() {
        Scanner sc = new Scanner(System.in);
        System.out.print("\nEnter the amount to deposit: ");
        float amount = sc.nextFloat();

        if (amount > 0) {
            balance += amount;
            transactions++;
            String transaction = "Deposit: " + amount + " Rs\n";
            transactionHistory += transaction;
            System.out.println("Deposit successful.");
        } else {
            System.out.println("Invalid amount.");
        }
    }

    public void transfer() {
        Scanner sc = new Scanner(System.in);
        System.out.print("\nEnter the recipient's name: ");
        String recipient = sc.nextLine();
        System.out.print("Enter the amount to transfer: ");
        float amount = sc.nextFloat();

        if (amount > 0 && balance >= amount) {
            balance -= amount;
            transactions++;
            String transaction = "Transfer: " + amount + " Rs to " + recipient + "\n";
            transactionHistory += transaction;
            System.out.println("Transfer successful.");
        } else {
            System.out.println("Invalid amount or insufficient balance.");
        }
    }

    public void checkBalance() {
        System.out.println("\n" + balance + " Rs");
    }

    public void transHistory() {
        if (transactions == 0) {
            System.out.println("\nEmpty");
        } else {
            System.out.println("\n" + transactionHistory);
        }
    }

    private boolean isNumeric(String str) {
        return str.matches("\\d+");
    }

    private boolean isCapitalized(String str) {
        return str.matches("[A-Z][a-z]*");
    }
}

public class AtmInterface {
    public static int takeIntegerInput(int limit) {
        int input = 0;
        boolean flag = false;

        while (!flag) {
            try {
                Scanner sc = new Scanner(System.in);
                input = sc.nextInt();
                flag = true;

                if (flag && input > limit || input < 1) {
                    System.out.println("Choose a number between 1 to " + limit);
                    flag = false;
                }
            } catch (Exception e) {
                System.out.println("Enter only an integer value");
                flag = false;
            }
        }
        return input;
    }

    public static void main(String[] args) {
        System.out.println("\n**********WELCOME TO SBI ATM SYSTEM**********\n");
        System.out.println("1. Register \n2. Exit");
        System.out.print("Enter Your Choice - ");
        int choice = takeIntegerInput(2);

        if (choice == 1) {
            BankAccount b = new BankAccount();
            b.register();
            while (true) {
                System.out.println("\n1. Login \n2. Exit");
                System.out.print("Enter Your Choice - ");
                int ch = takeIntegerInput(2);
                if (ch == 1) {
                    if (b.login()) {
                        System.out.println("\n\n**********WELCOME BACK " + b.firstName + " **********\n");
                        boolean isFinished = false;
                        while (!isFinished) {
                            System.out.println("\n1. Withdraw \n2. Deposit \n3. Transfer \n4. Check Balance \n5. Transaction History \n6. Exit");
                            System.out.print("Enter Your Choice - ");
                            int c = takeIntegerInput(6);
                            switch (c) {
                                case 1:
                                    b.withdraw();
                                    break;
                                case 2:
                                    b.deposit();
                                    break;
                                case 3:
                                    b.transfer();
                                    break;
                                case 4:
                                    b.checkBalance();
                                    break;
                                case 5:
                                    b.transHistory();
                                    break;
                                case 6:
                                    isFinished = true;
                                    break;
                            }
                        }
                    }
                } else {
                    System.exit(0);
                }
            }
        } else {
            System.exit(0);
        }
    }
}
